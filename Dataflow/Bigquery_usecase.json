{"dataflow":{"dfKey":"29915f63-1e58-46b2-9b13-c7bab054436a","name":"Bigquery_usecase","tags":null,"description":null,"definition":"{\"name\":\"Bigquery_usecase\",\"engineVariableName\":\"\",\"components\":[{\"udfNames\":[],\"componentId\":0,\"componentName\":\"startComponent\",\"tableName\":\"\",\"category\":\"Start\",\"componentType\":\"UDF\",\"rank\":0,\"dataSourceName\":\"\",\"displayRows\":0,\"dependencies\":[],\"className\":\"com.datagaps.dataflow.models.UDFComponent\",\"executionOption\":\"\",\"excludeNotification\":\"Y\"},{\"dbScripts\":[{\"script\":\"DROP TABLE IF EXISTS `export_customer.employee_source`;\\r\\nDROP TABLE IF EXISTS `export_customer.employee_target`;\\r\\n\\r\\nCREATE OR REPLACE TABLE `export_customer.employee_source` (\\r\\n  id INT64,\\r\\n  name STRING,\\r\\n  email STRING,\\r\\n  phone STRING,\\r\\n  joining_date DATE,\\r\\n  designation STRING,\\r\\n  salary NUMERIC,\\r\\n  reports_to INT64,\\r\\n  department_code INT64\\r\\n);\\r\\n\\r\\nCREATE OR REPLACE TABLE `export_customer.employee_target` (\\r\\n  id STRING,\\r\\n  name STRING,\\r\\n  email STRING,\\r\\n  phone STRING,\\r\\n  joining_date STRING,\\r\\n  designation STRING,\\r\\n  salary STRING,\\r\\n  reports_to STRING,\\r\\n  department_code STRING\\r\\n);\\r\\n\\r\\nINSERT INTO `export_customer.employee_source` VALUES\\r\\n(1001, \\u0027Alice Ray\\u0027, \\u0027alice@company.com\\u0027, \\u0027555-1001\\u0027, DATE \\u00272020-01-10\\u0027, \\u0027Director\\u0027, 130000, NULL, 10),\\r\\n(1002, \\u0027Bob Smith\\u0027, \\u0027bob@company.com\\u0027, \\u0027555-1002\\u0027, DATE \\u00272021-03-22\\u0027, \\u0027Manager\\u0027, 96000, 1001, 10),\\r\\n(1003, \\u0027Charlie Lee\\u0027, \\u0027charlie@company.com\\u0027, \\u0027555-1003\\u0027, DATE \\u00272019-11-13\\u0027, \\u0027Manager\\u0027, 91000, 1001, 20),\\r\\n(1004, \\u0027David Kim\\u0027, \\u0027david@company.com\\u0027, \\u0027555-1004\\u0027, DATE \\u00272020-05-21\\u0027, \\u0027Engineer\\u0027, 78500, 1002, 10),\\r\\n(1005, \\u0027Ella Zhang\\u0027, \\u0027ella@company.com\\u0027, \\u0027555-1005\\u0027, DATE \\u00272022-01-16\\u0027, \\u0027Engineer\\u0027, 75500, 1002, 10),\\r\\n(1006, \\u0027Faisal Khan\\u0027, \\u0027faisal@company.com\\u0027, \\u0027555-1006\\u0027, DATE \\u00272021-06-10\\u0027, \\u0027Engineer\\u0027, 77000, 1003, 20),\\r\\n(1007, \\u0027Grace Liu\\u0027, \\u0027grace@company.com\\u0027, \\u0027555-1007\\u0027, DATE \\u00272022-04-18\\u0027, \\u0027Analyst\\u0027, 70000, 1003, 20),\\r\\n(1008, \\u0027Hank Miller\\u0027, \\u0027hank@company.com\\u0027, \\u0027555-1008\\u0027, DATE \\u00272021-08-12\\u0027, \\u0027Analyst\\u0027, 72000, 1002, 10),\\r\\n(1009, \\u0027Isha Rao\\u0027, \\u0027isha@company.com\\u0027, \\u0027555-1009\\u0027, DATE \\u00272023-02-01\\u0027, \\u0027Intern\\u0027, 40000, 1007, 20),\\r\\n(1010, \\u0027John Doe\\u0027, \\u0027john@company.com\\u0027, \\u0027555-1010\\u0027, DATE \\u00272022-07-23\\u0027, \\u0027Consultant\\u0027, 83000, 1003, 20),\\r\\n(1011, \\u0027Kate Bell\\u0027, \\u0027kate@company.com\\u0027, \\u0027555-1011\\u0027, DATE \\u00272022-12-01\\u0027, \\u0027Consultant\\u0027, 81000, 1002, 10),\\r\\n(1012, \\u0027Liam Wang\\u0027, \\u0027liam@company.com\\u0027, \\u0027555-1012\\u0027, DATE \\u00272023-01-10\\u0027, \\u0027Engineer\\u0027, 78000, 1002, 10),\\r\\n(1013, \\u0027Maya Singh\\u0027, \\u0027maya@company.com\\u0027, \\u0027555-1013\\u0027, DATE \\u00272023-03-03\\u0027, \\u0027Engineer\\u0027, 77000, 1003, 20),\\r\\n(1014, \\u0027Nina Das\\u0027, \\u0027nina@company.com\\u0027, \\u0027555-1014\\u0027, DATE \\u00272021-11-21\\u0027, \\u0027Analyst\\u0027, 69000, 1003, 20),\\r\\n(1015, \\u0027Omar Zaki\\u0027, \\u0027omar@company.com\\u0027, \\u0027555-1015\\u0027, DATE \\u00272022-09-30\\u0027, \\u0027Manager\\u0027, 95000, 1001, 30),\\r\\n(1016, \\u0027Priya Menon\\u0027, \\u0027priya@company.com\\u0027, \\u0027555-1016\\u0027, DATE \\u00272023-02-17\\u0027, \\u0027Engineer\\u0027, 75000, 1015, 30),\\r\\n(1017, \\u0027Qi Zhang\\u0027, \\u0027qi@company.com\\u0027, \\u0027555-1017\\u0027, DATE \\u00272022-08-09\\u0027, \\u0027Engineer\\u0027, 74000, 1015, 30),\\r\\n(1018, \\u0027Ravi Patel\\u0027, \\u0027ravi@company.com\\u0027, \\u0027555-1018\\u0027, DATE \\u00272023-03-11\\u0027, \\u0027Analyst\\u0027, 71000, 1015, 30),\\r\\n(1019, \\u0027Sana Ali\\u0027, \\u0027sana@company.com\\u0027, \\u0027555-1019\\u0027, DATE \\u00272023-05-21\\u0027, \\u0027Consultant\\u0027, 82000, 1015, 30),\\r\\n(1020, \\u0027Tom Hardy\\u0027, \\u0027tom@company.com\\u0027, \\u0027555-1020\\u0027, DATE \\u00272023-06-12\\u0027, \\u0027Intern\\u0027, 42000, 1019, 30);\\r\\n\\r\\nINSERT INTO `export_customer.employee_target` VALUES\\r\\n(\\u00271001\\u0027, \\u0027Alice Ray\\u0027, \\u0027alice@company.com\\u0027, \\u0027555-1001\\u0027, \\u002710/01/2020\\u0027, \\u0027Director\\u0027, \\u0027$130,000.00\\u0027, NULL, \\u002710\\u0027),\\r\\n(\\u00271002\\u0027, \\u0027Bob Smith\\u0027, \\u0027bob@company.com\\u0027, \\u0027555-1002\\u0027, \\u002722/03/2021\\u0027, \\u0027Manager\\u0027, \\u0027$95,000.00\\u0027, \\u00271001\\u0027, \\u002710\\u0027),\\r\\n(\\u00271003\\u0027, \\u0027Charlie Lee\\u0027, \\u0027charlie@company.com\\u0027, \\u0027555-1003\\u0027, \\u002713/11/2019\\u0027, \\u0027Manager\\u0027, \\u0027$92,000.00\\u0027, \\u00271001\\u0027, \\u002720\\u0027),\\r\\n(\\u00271004\\u0027, \\u0027David Kim\\u0027, \\u0027david@company.com\\u0027, \\u0027555-1004\\u0027, \\u002721/05/2020\\u0027, \\u0027Engineer\\u0027, \\u0027$78,500.00\\u0027, \\u00271002\\u0027, \\u002710\\u0027),\\r\\n(\\u00271005\\u0027, \\u0027Ella Zhang\\u0027, \\u0027ella@company.com\\u0027, \\u0027555-1005\\u0027, \\u002715/01/2022\\u0027, \\u0027Engineer\\u0027, \\u0027$76,000.00\\u0027, \\u00271002\\u0027, \\u002710\\u0027),\\r\\n(\\u00271006\\u0027, \\u0027Faisal Khan\\u0027, \\u0027faisal@company.com\\u0027, \\u0027555-1006\\u0027, \\u002710/06/2021\\u0027, \\u0027Engineer\\u0027, \\u0027$77,000.00\\u0027, \\u00271003\\u0027, \\u002720\\u0027),\\r\\n(\\u00271007\\u0027, \\u0027Grace Liu\\u0027, \\u0027grace@company.com\\u0027, \\u0027555-1007\\u0027, \\u002718/04/2022\\u0027, \\u0027Analyst\\u0027, \\u0027$70,000.00\\u0027, \\u00271003\\u0027, \\u002720\\u0027),\\r\\n(\\u00271008\\u0027, \\u0027Hank Miller\\u0027, \\u0027hank@company.com\\u0027, \\u0027555-1008\\u0027, \\u002712/08/2021\\u0027, \\u0027Analyst\\u0027, \\u0027$72,000.00\\u0027, \\u00271002\\u0027, \\u002710\\u0027),\\r\\n(\\u00271009\\u0027, \\u0027Isha Rao\\u0027, \\u0027isha@company.com\\u0027, \\u0027555-1009\\u0027, \\u002701/02/2023\\u0027, \\u0027Intern\\u0027, \\u0027$40,000.00\\u0027, \\u00271007\\u0027, \\u002720\\u0027),\\r\\n(\\u00271010\\u0027, \\u0027John Doe\\u0027, \\u0027john@company.com\\u0027, \\u0027555-1010\\u0027, \\u002723/07/2022\\u0027, \\u0027Consultant\\u0027, \\u0027$83,000.00\\u0027, \\u00271003\\u0027, \\u002720\\u0027),\\r\\n(\\u00271011\\u0027, \\u0027Kate Bell\\u0027, \\u0027kate@company.com\\u0027, \\u0027555-1011\\u0027, \\u002701/12/2022\\u0027, \\u0027Consultant\\u0027, \\u0027$81,000.00\\u0027, \\u00271002\\u0027, \\u002710\\u0027),\\r\\n(\\u00271012\\u0027, \\u0027Liam Wang\\u0027, \\u0027liam@company.com\\u0027, \\u0027555-1012\\u0027, \\u002710/01/2023\\u0027, \\u0027Engineer\\u0027, \\u0027$78,000.00\\u0027, \\u00271002\\u0027, \\u002710\\u0027),\\r\\n(\\u00271013\\u0027, \\u0027Maya Singh\\u0027, \\u0027maya@company.com\\u0027, \\u0027555-1013\\u0027, \\u002703/03/2023\\u0027, \\u0027Engineer\\u0027, \\u0027$77,000.00\\u0027, \\u00271003\\u0027, \\u002720\\u0027),\\r\\n(\\u00271014\\u0027, \\u0027Nina Das\\u0027, \\u0027nina@company.com\\u0027, \\u0027555-1014\\u0027, \\u002721/11/2021\\u0027, \\u0027Analyst\\u0027, \\u0027$69,000.00\\u0027, \\u00271003\\u0027, \\u002720\\u0027),\\r\\n(\\u00271015\\u0027, \\u0027Omar Zaki\\u0027, \\u0027omar@company.com\\u0027, \\u0027555-1015\\u0027, \\u002730/09/2022\\u0027, \\u0027Manager\\u0027, \\u0027$95,000.00\\u0027, \\u00271001\\u0027, \\u002730\\u0027),\\r\\n(\\u00271016\\u0027, \\u0027Priya Menon\\u0027, \\u0027priya@company.com\\u0027, \\u0027555-1016\\u0027, \\u002717/02/2023\\u0027, \\u0027Engineer\\u0027, \\u0027$75,000.00\\u0027, \\u00271015\\u0027, \\u002730\\u0027),\\r\\n(\\u00271017\\u0027, \\u0027Qi Zhang\\u0027, \\u0027qi@company.com\\u0027, \\u0027555-1017\\u0027, \\u002709/08/2022\\u0027, \\u0027Engineer\\u0027, \\u0027$74,000.00\\u0027, \\u00271015\\u0027, \\u002730\\u0027),\\r\\n(\\u00271018\\u0027, \\u0027Ravi Patel\\u0027, \\u0027ravi@company.com\\u0027, \\u0027555-1018\\u0027, \\u002711/03/2023\\u0027, \\u0027Analyst\\u0027, \\u0027$71,000.00\\u0027, \\u00271015\\u0027, \\u002730\\u0027),\\r\\n(\\u00271019\\u0027, \\u0027Sana Ali\\u0027, \\u0027sana@company.com\\u0027, \\u0027555-1019\\u0027, \\u002721/05/2023\\u0027, \\u0027Consultant\\u0027, \\u0027$82,000.00\\u0027, \\u00271015\\u0027, \\u002730\\u0027),\\r\\n(\\u00271020\\u0027, \\u0027Tom Hardy\\u0027, \\u0027tom@company.com\\u0027, \\u0027555-1020\\u0027, \\u002712/06/2023\\u0027, \\u0027Intern\\u0027, \\u0027$42,000.00\\u0027, \\u00271019\\u0027, \\u002730\\u0027);\\r\\n\",\"executionOrder\":1,\"title\":\"\"}],\"componentId\":8,\"componentName\":\"Data\",\"tableName\":\"\",\"category\":\"Processor\",\"componentType\":\"DB script\",\"rank\":0,\"dataSourceName\":\"BigQuery_Test_with crednetails\",\"displayRows\":50,\"dependencies\":[],\"className\":\"com.datagaps.dataflow.models.DBScriptComponent\",\"dataSourceLogicalName\":\"\",\"executionOption\":\"\",\"excludeNotification\":\"N\"},{\"dbScripts\":[{\"script\":\"SELECT column_name,\\r\\n  data_type,column_length\\r\\nFROM `export_customer.INFORMATION_SCHEMA.COLUMNS`\\r\\nWHERE table_name \\u003d \\u0027employee_source\\u0027;\\r\\n\",\"executionOrder\":1,\"title\":\"\"}],\"componentId\":1,\"componentName\":\"Employee_source\",\"tableName\":\"\",\"category\":\"Processor\",\"componentType\":\"DB script\",\"rank\":0,\"dataSourceName\":\"BigQuery_Test_with crednetails\",\"displayRows\":50,\"dependencies\":[8],\"className\":\"com.datagaps.dataflow.models.DBScriptComponent\",\"dataSourceLogicalName\":\"\",\"excludeNotification\":\"N\"},{\"dbScripts\":[{\"script\":\"SELECT *\\r\\nFROM `export_customer.INFORMATION_SCHEMA.COLUMNS`\\r\\nWHERE table_name \\u003d \\u0027employee_target\\u0027;\\r\\n\",\"executionOrder\":1,\"title\":\"\"}],\"componentId\":4,\"componentName\":\"Employees_target\",\"tableName\":\"\",\"category\":\"Processor\",\"componentType\":\"DB script\",\"rank\":0,\"dataSourceName\":\"BigQuery_Test_with crednetails\",\"displayRows\":50,\"dependencies\":[8],\"className\":\"com.datagaps.dataflow.models.DBScriptComponent\",\"dataSourceLogicalName\":\"\",\"excludeNotification\":\"N\"},{\"dbScripts\":[{\"script\":\"SELECT \\u0027employee_source\\u0027 AS table_name, COUNT(*) AS row_count\\r\\nFROM `export_customer.employee_source`\\r\\nUNION ALL\\r\\nSELECT \\u0027employee_target\\u0027 AS table_name, COUNT(*) AS row_count\\r\\nFROM `export_customer.employee_target`;\\r\\n\",\"executionOrder\":1,\"title\":\"\"}],\"componentId\":7,\"componentName\":\"Record_Count\",\"tableName\":\"\",\"category\":\"Processor\",\"componentType\":\"DB script\",\"rank\":0,\"dataSourceName\":\"BigQuery_Test_with crednetails\",\"displayRows\":50,\"dependencies\":[1,4],\"className\":\"com.datagaps.dataflow.models.DBScriptComponent\",\"dataSourceLogicalName\":\"\",\"executionOption\":\"allparentpassorfail\",\"excludeNotification\":\"N\"},{\"dbScripts\":[{\"script\":\"-- Compare schema between source and target\\r\\nWITH source_schema AS (\\r\\n  SELECT\\r\\n    column_name,\\r\\n    data_type AS source_type\\r\\n  FROM `export_customer.INFORMATION_SCHEMA.COLUMNS`\\r\\n  WHERE table_name \\u003d \\u0027employee_source\\u0027\\r\\n),\\r\\ntarget_schema AS (\\r\\n  SELECT\\r\\n    column_name,\\r\\n    data_type AS target_type\\r\\n  FROM `export_customer.INFORMATION_SCHEMA.COLUMNS`\\r\\n  WHERE table_name \\u003d \\u0027employee_target\\u0027\\r\\n)\\r\\n\\r\\nSELECT\\r\\n  COALESCE(s.column_name, t.column_name) AS column_name,\\r\\n  s.source_type,\\r\\n  t.target_type,\\r\\n  CASE\\r\\n    WHEN s.source_type IS NULL THEN \\u0027Missing in Source\\u0027\\r\\n    WHEN t.target_type IS NULL THEN \\u0027Missing in Target\\u0027\\r\\n    WHEN s.source_type !\\u003d t.target_type THEN \\u0027Type Mismatch\\u0027\\r\\n    ELSE \\u0027Match\\u0027\\r\\n  END AS difference\\r\\nFROM source_schema s\\r\\nFULL OUTER JOIN target_schema t\\r\\n  ON s.column_name \\u003d t.column_name\\r\\nORDER BY column_name;\\r\\n\",\"executionOrder\":1,\"title\":\"\"}],\"componentId\":5,\"componentName\":\"Schema_compare\",\"tableName\":\"\",\"category\":\"Processor\",\"componentType\":\"DB script\",\"rank\":0,\"dataSourceName\":\"BigQuery_Test_with crednetails\",\"displayRows\":50,\"dependencies\":[4,1],\"className\":\"com.datagaps.dataflow.models.DBScriptComponent\",\"dataSourceLogicalName\":\"\",\"executionOption\":\"allparentpassorfail\",\"excludeNotification\":\"N\"},{\"dbScripts\":[{\"script\":\"SELECT\\r\\n  s.id AS source_id,\\r\\n  t.id AS target_id,\\r\\n  s.name, t.name,\\r\\n  s.email, t.email,\\r\\n  s.phone, t.phone,\\r\\n  s.joining_date, t.joining_date,\\r\\n  s.designation, t.designation,\\r\\n  s.salary, t.salary,\\r\\n  s.reports_to, t.reports_to,\\r\\n  s.department_code, t.department_code,\\r\\n\\r\\n  ARRAY_TO_STRING(\\r\\n    ARRAY(\\r\\n      SELECT col FROM UNNEST([\\r\\n        IF(CAST(s.name AS STRING) !\\u003d t.name, \\u0027name\\u0027, NULL),\\r\\n        IF(CAST(s.email AS STRING) !\\u003d t.email, \\u0027email\\u0027, NULL),\\r\\n        IF(CAST(s.phone AS STRING) !\\u003d t.phone, \\u0027phone\\u0027, NULL),\\r\\n        IF(CAST(s.joining_date AS STRING) !\\u003d t.joining_date, \\u0027joining_date\\u0027, NULL),\\r\\n        IF(CAST(s.designation AS STRING) !\\u003d t.designation, \\u0027designation\\u0027, NULL),\\r\\n        IF(CAST(s.salary AS STRING) !\\u003d t.salary, \\u0027salary\\u0027, NULL),\\r\\n        IF(CAST(s.reports_to AS STRING) !\\u003d t.reports_to, \\u0027reports_to\\u0027, NULL),\\r\\n        IF(CAST(s.department_code AS STRING) !\\u003d t.department_code, \\u0027department_code\\u0027, NULL)\\r\\n      ]) AS col\\r\\n      WHERE col IS NOT NULL\\r\\n    ),\\r\\n    \\u0027, \\u0027\\r\\n  ) AS mismatch_columns\\r\\n\\r\\nFROM `export_customer.employee_source` s\\r\\nJOIN `export_customer.employee_target` t\\r\\n  ON CAST(s.id AS STRING) \\u003d t.id\\r\\nWHERE\\r\\n  NOT (\\r\\n    CAST(s.name AS STRING) \\u003d t.name AND\\r\\n    CAST(s.email AS STRING) \\u003d t.email AND\\r\\n    CAST(s.phone AS STRING) \\u003d t.phone AND\\r\\n    CAST(s.joining_date AS STRING) \\u003d t.joining_date AND\\r\\n    CAST(s.designation AS STRING) \\u003d t.designation AND\\r\\n    CAST(s.salary AS STRING) \\u003d t.salary AND\\r\\n    CAST(s.reports_to AS STRING) \\u003d t.reports_to AND\\r\\n    CAST(s.department_code AS STRING) \\u003d t.department_code\\r\\n  )\\r\\nORDER BY s.id;\\r\\n\",\"executionOrder\":1,\"title\":\"\"}],\"componentId\":10,\"componentName\":\"Structure_compare\",\"tableName\":\"\",\"category\":\"Processor\",\"componentType\":\"DB script\",\"rank\":0,\"dataSourceName\":\"BigQuery_Test_with crednetails\",\"displayRows\":50,\"dependencies\":[8],\"className\":\"com.datagaps.dataflow.models.DBScriptComponent\",\"dataSourceLogicalName\":\"\",\"executionOption\":\"allparentpassorfail\",\"excludeNotification\":\"N\"}],\"isDeleteWorkSchemaTable\":\"N\"}","parameters":"[{\"type\":\"static\",\"name\":\"limit_rows\",\"defValueInInteractiveMode\":\"limit 10\",\"defValueInBatchMode\":\"limit 1000\"}]","version":3,"maxComponentId":11,"livyOptions":null,"isDeleted":"N","userName":null,"type":"dataflow","environmentName":"","folderPath":"Dataflow","workSchemaName":null,"diagramSchema":"{\"isCustom\":false,\"diagramDef\":[]}"},"analysis":[],"datamodels":[],"tagDetails":[],"dataCompares":[],"filterDatasetMappings":[],"referenceDatasets":null}